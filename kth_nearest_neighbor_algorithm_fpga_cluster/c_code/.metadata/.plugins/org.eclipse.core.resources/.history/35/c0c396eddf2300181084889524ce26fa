
#include "xparameters.h"
#include "dma.h"
#include "stdlib.h"
#include "xtime_l.h"



#define NUM_INTS 5000000
#define PACKET_SIZE 250000 // num ints in each package

const u32 num_packets = NUM_INTS / PACKET_SIZE;


// functions
void dma_test();
void init_progam();

u32 interrupt_count = 0;

int main(void)
{

	NUM_PACKETS = 15625;
    PACKET_SIZE = 320; //in ints
    EDATA_INDEX=0;
	EDATA= malloc(sizeof(int)*NUM_PACKETS*PACKET_SIZE);

	ethernet_config();
	ethernet_accept();

	ethernet_receive();
	ethernet_send();

	xil_printf("\r\n--- Entering main() --- \r\n");
	init_dma2();
	// initialize variables
	RESET = 1;
	NUM_WORDS = NUM_INTS;
	PACKET_SIZE_REG = PACKET_SIZE;
	u32 *array = (u32*)malloc(sizeof(u32)*NUM_INTS);
	RESET = 0;

	// initialize array of integers
	xil_printf("before reset\n");
	for (int i = 0; i < NUM_INTS; ++i)
	{
		array[i] = i+1;
	}
	xil_printf("after\n");

	// send packets of integers
	u8 *packet = (u8*)array;
	int num_bytes = sizeof(int)*PACKET_SIZE;
	for (int i = 0; i < num_packets; ++i)
	{
		init_dma2();
		xil_printf("--- Sending packet %d--- \r\n", i);
		SendPacket((packet + i*num_bytes), num_bytes);
		for(int j=0; j<100000; j++); //delay because done isn't working
		//while(DONE != 0); not working
		// print sum of integers
		xil_printf("INT1 = %i\n", INT1);
		xil_printf("INT2 = %i\n", INT2);
	}

		//
		free(array);
		xil_printf("--- Exiting main() --- \r\n");


	return 0;
}
